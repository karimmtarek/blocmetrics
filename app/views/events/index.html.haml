.container.dashboard
  .row
    .col-md-12
      %h1.page-header Dashboard

      - if current_user.events.any?
        = form_tag(events_path, {method: :get}) do
          %div
            = label_tag :event_name
            = select_tag :event_name, options_from_collection_for_select(@event_names, "name", "name", :selected => params[:event_name]), prompt: "Choose an event", required: true
          %div
            = label_tag :date_start, 'Start date'
            - if params[:date_start].nil?
              = select_date @init_date_from, prefix: :date_start
            - else
              = select_date @date_from, prefix: :date_start
          %div
            = label_tag :date_end, 'End date'
            - if params[:date_end].nil?
              = select_date @init_date_to, prefix: :date_end
            - else
              = select_date @date_to, prefix: :date_end
          %div
            = submit_tag "Update Chart"
        .chart
          - if params[:event_name].nil?
            .alert.alert-info
              %strong Heads up!
              to create a chart please select an event,start date and end date.
          - else
            .well
              = line_chart @chart
      - else
        .alert.alert-info
          %strong Oh snap! looks like you need to setup Blocmetrics on your web site/app first
          %ol
            %li
              Download blocmetrics javascript micro-library and install it by adding it to your html before the closing body tag, it should look like this:
              %br
              %code
                &lt;script src="/blocmetrics.js"&gt;&lt;/script&gt;
                %br
                &lt;/body&gt;
            %li
              Add the tracking code
              %code blocmetrics.track("event-name", {property-key: "property-value"});
              to any event, for example you can trigger when the page loads or on a link click or hover, it's up to you, you should change
              %code "event-name"
              ,
              %code property-key
              ,
              %code "property-value"
              ,
              %code "property-value"
              to match your desired event criteria, you can have as much event properties as you want, just added to the properties has as a key/value pair, like so:
              %code {property-key-1: "property-value-1", property-key-2: "property-value-2"}

            %li Once the setup is done and users started to interact with your web page, you can then review your events as a chart from the dashboard.
          -# You don't have any events yet, stay put! sooner or later they'll start coming.
-# = pie_chart Event.group(:name).count

-# = line_chart Event.group(:name).group(:created_on).count



-# %hr
-# = will_paginate @events
-# %hr
-# %ol
-#   - @events.each do |event|
-#     %li
-#       %strong Source:
-#       = event.source_url
-#       %br
-#       %strong Name:
-#       = event.name
-#       %br
-#       %strong Created on:
-#       = event.created_on
-#       - if event.properties.any?
-#         %br
-#         %strong Properies:
-#         %ul
-#           - event.properties.each do |property|
-#             %li= "#{property.key}: #{property.value}"
-#       %hr

-# = will_paginate @events

